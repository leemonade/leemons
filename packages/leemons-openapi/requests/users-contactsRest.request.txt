{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'contactsRest' property does in the '/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/services/rest/users.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/services/rest/users.rest.js\n[object Object]\n/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/core/user-agents/contacts/getUserAgentContacts.js\n[object Object]\n/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/core/user-agents/getUserAgentProfile.js\n[object Object]\n/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/core/profiles/contacts/getProfileContacts.js\n[object Object]\n/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/core/user-agents/searchUserAgents.js\n[object Object]\n/Users/rvillares/Desktop/workdir/leemonade/leemons-saas/leemons/plugins/leemons-plugin-users/backend/core/user-agents/getUserAgentsInfo.js\n[object Object]",
  "response": "{\"summary\":\"Manage user agent contacts\",\"description\":\"This endpoint is responsible for managing contacts related to a user agent within the system. It involves operations such as listing, updating, creating, or deleting contact information for a user agent.\\n\\n**Authentication:** Users must be authenticated to manage contact information. Access to this endpoint requires a valid session or authentication token.\\n\\n**Permissions:** Access to this endpoint is restricted based on user roles and permissions. Only authorized users with the necessary permissions can manage user agent contacts.\\n\\nUpon receiving a request, the handler first validates the user's authentication and authorization. Assuming the user is permitted, the handler then processes the request by interacting with the underlying services responsible for user agent contacts. Actions such as retrieving the list of contacts, updating contact details, creating new contacts, or removing existing ones are carried out. These operations are orchestrated by invoking methods from the corresponding user agent contacts service, which interact with the database to perform the necessary CRUD (Create, Read, Update, Delete) operations. The final response from this endpoint will include the outcome of these actions, typically in the form of confirmation of success, the updated contact list, or an error message if applicable.\",\"AIGenerated\":true}"
}