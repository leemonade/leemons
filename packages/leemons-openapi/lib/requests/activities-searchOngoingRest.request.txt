{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'searchOngoingRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/services/rest/activities.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/services/rest/activities.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/searchOngoingActivities.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/getActivitiesDates.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/filterAssignationsByDaysUntilDeadline.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/sorts/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/sorts/applyOffsetAndLimit.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/filterInstancesByIsModule.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/groupInstancesInModules.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/returnModulesData.js\n[object Object]",
  "response": "{\"summary\":\"Search and compile ongoing activities for a user\",\"description\":\"This endpoint searches and compiles a list of ongoing activities that are relevant to the logged-in user. The main function is to provide an organized view of activities like assignments or projects that are currently active and require the user's attention or action.\\n\\n**Authentication:** User authentication is required to access this endpoint. It ensures that the data returned is specific to the authenticated user and their permissions.\\n\\n**Permissions:** The user must have the appropriate permissions to view activities. This typically includes being part of certain user groups or roles that have access to specific modules or activities within the system.\\n\\nThe controller initializes by invoking the `searchOngoingActivities` method which aggregates data across different tables to collate ongoing activities. This process involves filtering activities based on their deadlines, grouping them by modules if applicable, and applying pagination through offsets and limits to manage the data volume returned. Each activity's details, including start and end dates, are processed to ensure that users receive timely and relevant information tailored to their role and permissions in the system.\",\"AIGenerated\":true}"
}