{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'instanceGetRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tasks/backend/services/rest/assignments.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tasks/backend/services/rest/assignments.rest.js\n[object Object]",
  "response": "{\"summary\":\"Fetches specific task assignment details\",\"description\":\"This endpoint fetches details for a specific task assignment based on the provided assignment identifier. It retrieves comprehensive information including the task description, status, assigned users, and any associated deadlines or milestones.\\n\\n**Authentication:** Users must be authenticated to request the details of an assignment. Failure to provide a valid authentication token will result in denial of access to this endpoint.\\n\\n**Permissions:** Users need to have 'read' permission on the task assignments module to access this endpoint. Without the requisite permissions, the request will be denied, ensuring that only authorized personnel can view sensitive assignment details.\\n\\nUpon receiving the request, the endpoint initially verifies the authentication and permission levels of the user from the context provided. If authentication or permission checks fail, an error response is generated. If checks pass, the `getAssignmentById` method from the `Assignments` service is called with the assignment identifier to fetch the relevant details. This method interacts with the database to retrieve the full information pertaining to the requested assignment, which is then formatted and returned as a JSON object in the response. The entire processing ensures data integrity and security compliance by adhering to the defined access controls.\",\"AIGenerated\":true}"
}