{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'detailCalendarConfigRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/services/rest/calendar.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/services/rest/calendar.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/add.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/validations/forms.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/center-calendar-configs/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/center-calendar-configs/addMany.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/detail.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/validations/exists.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/list.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/exist.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/update.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/remove.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/getCalendars.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/addEvent.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/updateEvent.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/removeEvent.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/events/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/events/detail.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/getByCenterId.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-calendar/backend/core/calendar-configs/getCentersWithOutAssign.js\n[object Object]",
  "response": "{\"summary\":\"Displays detailed configuration of a specific calendar\",\"description\":\"This endpoint retrieves detailed configuration data for a specific calendar based on the provided calendar ID. The endpoint aims to provide essential configuration details that might include settings like visibility, editing permissions, event rules, and other relevant attributes that define the behavior of the calendar.\\n\\n**Authentication:** Users need to be authenticated to request calendar configuration details. Attempting to access this endpoint without a valid authentication token will result in a denial of service.\\n\\n**Permissions:** The user must have the 'view_calendar_details' permission. Without this permission, the endpoint will restrict access, ensuring that only authorized users can view detailed calendar configurations.\\n\\nUpon receiving a request, the endpoint first verifies user authentication and checks if the user has the required permissions to view calendar details. If these checks are passed, the service calls the `detail` method in the 'calendar-configs' core with the identifier of the calendar to pull detailed information. This method interacts with the database to fetch comprehensive data about the calendar's configuration. The response is then formatted into a structured JSON object containing all relevant calendar configurations, which is sent back to the client.\",\"AIGenerated\":true}"
}