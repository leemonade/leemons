{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'setInstanceFeedbackRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/services/rest/tests.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/services/rest/tests.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/listTests.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/getTestsDetails.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions-banks/getQuestionsBanksDetails.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions/getByIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/saveTest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/validations/forms.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/setInstanceTimestamp.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/setQuestionResponse.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/findQuestionResponses.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/calculeUserAgentInstanceNote.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/getUserQuestionResponses.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/helpers/getConfigByInstance.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/helpers/getQuestionClues.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/deleteTest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/assignTest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/getInstanceFeedback.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/setInstanceFeedback.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/getAssignSavedConfigs.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/updateAssignSavedConfig.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/deleteAssignSavedConfig.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/tests/duplicate.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions-banks/duplicateQuestionBank.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions-banks/saveQuestionsBanks.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/question-bank-subjects/removeSubjectsFromQuestionBanks.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/question-bank-subjects/addSubjectsToQuestionBanks.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/question-bank-categories/updateCategory.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/question-bank-categories/createCategory.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions/deleteQuestions.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions/updateQuestion.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/core/questions/createQuestion.js\n[object Object]",
  "response": "{\"summary\":\"Set feedback for a test instance\",\"description\":\"This endpoint allows setting user-specific feedback for a particular test instance. The feedback can include comments, scores, or any formative feedback aimed to be shown to the user after completing the test.\\n\\n**Authentication:** Users must be authenticated to submit feedback. Lack of proper authentication will prevent access to this functionality.\\n\\n**Permissions:** The user needs to have 'edit-feedback' permission for the specific test instance to submit or update feedback.\\n\\nThis operation begins by decoding and verifying the user's authentication token to ensure validity and current session activity. Upon successful authentication, the method checks if the authenticated user has the required permission 'edit-feedback' for the test instance in question. If the permission checks succeed, the feedback data provided in the request body is processed and saved into the database linked to the specific test instance. The feedback storage is handled by a dedicated service method within the Moleculer service, which ensures the data integrity and provides error handling in case of database issues. Once successfully stored, the API returns a success message to the client, indicating that the feedback has been set.\",\"AIGenerated\":true}"
}