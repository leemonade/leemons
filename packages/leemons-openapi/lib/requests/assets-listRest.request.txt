{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'listRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/services/rest/assets.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/services/rest/assets.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/getByCategory.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleParams.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handlePermissions.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getPublic/getPublic.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/helpers/getRolePermissions.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/helpers/validateRole.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleAssetIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/helpers/getAssetIdFromPermissionName.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getAssetsByProgram/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getAssetsByProgram/getAssetsByProgram.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/shared/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/shared/normalizeItemsArray.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getAssetsBySubject/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getAssetsBySubject/getAssetsBySubject.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleSorting.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getByIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/buildQuery.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getUserPermissionsByAsset.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getAssetsWithPermissions.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getClassesPermissions/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getClassesPermissions/getClassesPermissions.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/helpers/getAssetPermissionName.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/helpers/canUnassignRole.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getAssetsWithSubjects.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getAssetsWithFiles.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/bookmarks/find/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/bookmarks/find/find.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getAssetsTags.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getAssetsCategoryData.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/getAssetsProgramsAggregatedById.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/assets/getByIds/processFinalAsset.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByAssets/getByAssets.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByAssets/handleOnlyShared.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByAssets/handleItemPermissions.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handlePermissionsRoles.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleViewerRole.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleEditorRole.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleAssignerRole.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handleIndexable.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-leebrary/backend/core/permissions/getByCategory/handlePreferCurrent.js\n[object Object]",
  "response": "{\"summary\":\"List all assets based on user permissions\",\"description\":\"This endpoint lists all assets accessible to the currently authenticated user based on their permissions. The returned assets may include those owned by the user, shared directly with the user, or shared within teams or groups the user belongs to.\\n\\n**Authentication:** Users must be authenticated to view the list of accessible assets. Proper authentication ensures that the returned list reflects accurate asset access as per user credentials and roles.\\n\\n**Permissions:** Users need to have the 'view' permission for assets. The system conducts a permission check to ensure the user has rights to access each asset listed. Absence of adequate permissions will limit the visibility of certain assets in the response.\\n\\nUpon receiving a request, the handler initializes by validating the userâ€™s authentication status. Once authenticated, it proceeds to fetch asset data by invoking related methods like `filterAssetsByUserPermissions` which determine the assets that the user is eligible to view. The methodology involves querying the database using criteria based on the user's roles and applicable permissions. Post query execution, the endpoint aggregates the data and formats it into a structured response. Finally, the service returns the list of assets in a JSON formatted payload, providing a clear view of all accessible resources to the user.\",\"AIGenerated\":true}"
}