{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'saveQuestionBanksRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/services/rest/questionsBanks.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/services/rest/questionsBanks.rest.js\n[object Object]",
  "response": "{\"summary\":\"Store and manage question banks\",\"description\":\"This endpoint allows for the creation or updating of question banks in a centralized repository. It supports operations such as adding new questions, modifying existing questions, and organizing these questions into structured banks that can be used across various tests or assessments.\\n\\n**Authentication:** Users need to be authenticated to interact with the question banks. Only authenticated requests will be processed, and unauthorized access attempts will result in a denial of the service.\\n\\n**Permissions:** This endpoint requires administrative permissions related to question bank management. Users need specific roles or privileges to create or modify the content of question banks.\\n\\nUpon receiving a request, this handler validates the user's authentication and permissions to ensure they are eligible to modify or create question banks. It then proceeds to apply the provided changes to the database, either adding new entries or updating existing ones based on the supplied data. The operation might involve various method calls within the service to handle different aspects of the question bank management, such as validation of input data, enforcement of business rules, and the actual data persistence in the database. The response to the client will confirm the successful execution of the operation or provide error messages detailing any issues encountered during the process.\",\"AIGenerated\":true}"
}