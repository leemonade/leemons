{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'deleteQuestionBankRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/services/rest/questionsBanks.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-tests/backend/services/rest/questionsBanks.rest.js\n[object Object]",
  "response": "{\"summary\":\"Deletes a specified question bank\",\"description\":\"This endpoint allows for the deletion of a specific question bank identified by its unique ID. The action ensures that only authorized users can delete a question bank, preserving the integrity and security of the data.\\n\\n**Authentication:** User authentication is required to access this endpoint. Users must supply valid credentials to proceed with the deletion operation.\\n\\n**Permissions:** Appropriate permissions are required to delete a question bank. Typically, users need to have administrative rights or specific role-based permissions to perform deletions on question banks.\\n\\nThe controller initiates the deletion process by verifying the userâ€™s authentication and permissions. If the checks pass, it proceeds to call the `deleteQuestionBank` method, passing the unique ID of the question bank as an argument. This method interacts with the database to remove the corresponding entry. Upon successful deletion, the response confirms the removal of the question bank, providing feedback to the requester about the outcome of the operation.\",\"AIGenerated\":true}"
}