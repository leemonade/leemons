{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'postNodeRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/services/rest/node.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/services/rest/node.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodes/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodes/addNode.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/validations/forms.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodes/reloadNodeFullNamesForCurriculum.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodes/nodesTreeByCurriculum.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodeLevels/nodeLevelsByCurriculum.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodeLevels/getNodeLevelSchema.js\n[object Object]",
  "response": "{\"summary\":\"Add a new curriculum node\",\"description\":\"This endpoint allows for the addition of a new node within a specified curriculum structure. A node can represent a modular unit such as a chapter, section, or a specific educational content item that fits within the broader curriculum framework.\\n\\n**Authentication:** User must be logged in to create a new node. A valid authentication token is required to proceed, and failure to provide one will result in a denial of access to this endpoint.\\n\\n**Permissions:** The user needs to have 'create_node' permission in their profile to perform this action. Without sufficient permissions, the system will reject the request to add a new node.\\n\\nDuring the execution flow of this endpoint, the `addNode` method from the `nodes` core is first invoked. This method takes incoming data which typically includes the nodeâ€™s title, description, the curriculum it belongs to, and any other relevant metadata. It validates the data against predefined schemas to ensure compliance with the system's requirements. Upon successful validation, the data is inserted into the curriculum structure in the database. Confirmation of this insertion is then returned to the user along with the new node's details, all sent back as a JSON object in the HTTP response.\",\"AIGenerated\":true}"
}