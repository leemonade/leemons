{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'getSubjectCreditsRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/services/rest/subject.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/services/rest/subject.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/validations/forms.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/subjects/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/subjects/getSubjectCredits.js\n[object Object]",
  "response": "{\"summary\":\"Calculates and retrieves credits for a given subject\",\"description\":\"This endpoint is designed to calculate and provide the total number of credits attributed to a specific academic subject. The calculation considers various factors including the academic level, subject requirements, and any special considerations within the academic institution's guidelines.\\n\\n**Authentication:** Users need to be authenticated to access this endpoint. Without proper authentication, the endpoint will reject the request, ensuring that only authorized personnel can access sensitive academic information.\\n\\n**Permissions:** This endpoint requires the user to have 'view_academic_credits' permission. Users without this permission will not be able to retrieve credit information, ensuring that access is restricted based on user roles within the educational institution.\\n\\nUpon receiving a request, the `getSubjectCreditsRest` handler in the `subject.rest.js` first validates the input parameters to ensure they match the expected format and values. It then calls the `getSubjectCredits` method from the `subjects` core module. This method performs the necessary calculations and database queries to determine the credit value associated with the subject. The calculated credits are then prepared and returned in the response body as JSON data, providing a clear and concise representation of the subject's credit value.\",\"AIGenerated\":true}"
}