{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'addTeachersToClassesUnderNodeTreeRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/services/rest/common.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/services/rest/common.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/common/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/common/addTeachersToClassesUnderNodeTree.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/common/getClassesUnderNodeTree.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/common/getTreeNodes.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/common/getTree.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramCourses.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramGroups.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramSubstages.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramKnowledges.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramSubjects.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramSubjectTypes.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/classes/listClasses.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/classes/classByIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/programHasSequentialCourses.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/subjects/subjectByIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/programs/getProgramCycles.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/classes/listSessionClasses.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/managers/getManagers.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/classes/addClassTeachers.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/validations/forms.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-academic-portfolio/backend/core/classes/addComunicaRoomsBetweenStudentsAndTeachers.js\n[object Object]",
  "response": "{\"summary\":\"Assign teachers to classes within a specific node tree\",\"description\":\"This endpoint assigns teachers to all classes that are linked to a specific node tree within the organizational structure of the academic portfolio. The structure and linkage determine where the teachers are needed and which classes they should be associated with.\\n\\n**Authentication:** This endpoint requires users to be authenticated to ensure that only authorized personnel can assign teachers to classes.\\n\\n**Permissions:** Users need to have administrative or academic coordinator permissions to access this functionality. The permission checks ensure that only users with the right level of access can make changes to the academic structure.\\n\\nUpon receiving a request, the endpoint first verifies the user's authentication status and permissions. If the verification is successful, it proceeds to interact with the `addTeachersToClassesUnderNodeTree` method in the `common` core. This method fetches all classes under the specified node tree and then assigns the designated teachers to these classes. The operation involves multiple database interactions managed through the Moleculer microservices framework to handle the data efficiently and securely. Once the teachers are successfully assigned, the endpoint sends a confirmation response indicating the successful assignment of teachers to the classes.\",\"AIGenerated\":true}"
}