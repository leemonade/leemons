{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'getCurriculumRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/services/rest/curriculum.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/services/rest/curriculum.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/curriculum/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/curriculum/curriculumByIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodeLevels/nodeLevelsByCurriculum.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodeLevels/getNodeLevelSchema.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-curriculum/backend/core/nodes/nodesTreeByCurriculum.js\n[object Object]",
  "response": "{\"summary\":\"Manage and retrieve detailed curriculum data\",\"description\":\"This endpoint facilitates the retrieval and management of detailed curriculum data including its structural components and associated levels. It primarily handles requests related to specific curriculum items or sets of curriculum data, adjusting its responses based on the provided identifiers.\\n\\n**Authentication:** Users need to be authenticated to interact with the curriculum data endpoints. Any requests without proper authentication will be denied access to the curriculum data.\\n\\n**Permissions:** The user must have appropriate permissions related to educational content management or specific rights granted for accessing or managing curriculum data.\\n\\nThe flow of this controller starts by validating the user's identity and permissions. It then proceeds to extract curriculum IDs from the request parameters and invokes the `getCurriculumByIds` method from the curriculum core service. This method retrieves data for each curriculum ID, including node levels and tree structures, by making subsequent calls to `nodeLevelsByCurriculum` and `nodesTreeByCurriculum`. The endpoint consolidates all this data to form a comprehensive view of the curriculum, which is then returned to the user in a structured JSON format.\",\"AIGenerated\":true}"
}