{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'searchRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/services/rest/instance.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/services/rest/instance.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/instances/searchInstances/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/searchInstances.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/getTeacherInstances.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/getInstancesData.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/getAssignablesData.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/activitiesData/getAssetsData.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/filters/filterInstancesByRoleAndQuery.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/instances/searchInstances/filterByInstanceDates.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/instances/searchInstances/getInstanceDates.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/sorts/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-assignables/backend/core/ongoing/helpers/sorts/sortInstancesByDates.js\n[object Object]",
  "response": "{\"summary\":\"Search assignable instances based on specified criteria\",\"description\":\"This endpoint handles the search operation for different instances of assignables based on the presented criteria, filters, and sort options supplied as part of the request. This could cover a wide range of assignable types, like homework, projects, or quizzes, facilitating the retrieval of relevant assignables according to user needs.\\n\\n**Authentication:** Users need to be authenticated in order to perform a search on assignable instances. The userâ€™s credentials must be verified to ensure valid access to the requested data.\\n\\n**Permissions:** Specific permissions are required to access this endpoint, ensuring that only users with rights to view or manage assignables can execute searches on instances.\\n\\nThe flow of the controller starts by validating user authentication and permissions. Upon validation, it processes the incoming query including filters like date, status, or type of assignable. The method `filterInstancesByRoleAndQuery` from the helpers filters the instances according to the role of the user and the query parameters. Afterwards, `getInstanceDates` and `filterByInstanceDates` methods are applied to narrow down the search results relating to specific date ranges. Finally, the search results are sorted by date via the `sortInstancesByDates` method before sending the response back to the user containing the filtered and sorted list of assignable instances.\",\"AIGenerated\":true}"
}