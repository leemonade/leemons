{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'getGradeRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/services/rest/grades.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/services/rest/grades.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/core/grades/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/core/grades/gradeByIds.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/core/grade-scales/getGradeScalesByGrade.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/core/grade-tags/getGradeTagsByGrade.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-grades/backend/core/grade-tags/getGradeTagsByIds.js\n[object Object]",
  "response": "{\"summary\":\"Fetches detailed grade information for specified IDs\",\"description\":\"This endpoint is designed to retrieve comprehensive grade details based on the provided grade IDs. The retrieved information includes but is not limited to the grade score, associated tags, and grading scale details.\\n\\n**Authentication:** Access to this endpoint requires the user to be logged in. Authentication ensures that grade information is securely accessed and protects the integrity of the data.\\n\\n**Permissions:** This endpoint requires that the user has permission to view the specific grades. Typically, this means that the user must either be the instructor for the course associated with the grades, an administrator, or the student to whom the grades belong.\\n\\nThe handler begins by receiving a list of grade IDs through the request parameters. It then calls the `gradeByIds` method in the `grades` core, which queries the database for the grade details corresponding to these IDs. Subsequently, it invokes the `getGradeScalesByGrade` and `getGradeTagsByGrade` from their respective modules to append additional contextual information about each grade. These operations amalgamate data from different sources to provide a thorough view of each grade's context and standing within an educational or training environment. The response then compiles and returns this data as a JSON object for the client.\",\"AIGenerated\":true}"
}