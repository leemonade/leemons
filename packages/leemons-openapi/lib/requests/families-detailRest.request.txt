{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'detailRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/services/rest/families.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/services/rest/families.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/core/families/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/core/families/detail.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/core/users/canViewFamily.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/core/users/isFamilyMember.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/core/families/getMembers.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-families/backend/core/users/getSessionFamilyPermissions.js\n[object Object]",
  "response": "{\"summary\":\"Provides detailed information about a specific family entity\",\"description\":\"This endpoint is designed for retrieving detailed data regarding a specific family entity within the application. It encapsulates comprehensive information about the family including its members and associated profiles.\\n\\n**Authentication:** Authorized access is mandatory, requiring users to be authenticated in order to retrieve family details. Unauthenticated requests will be denied.\\n\\n**Permissions:** This endpoint requires the user to have explicit permissions to view family information. Observing privacy and security standards, only permitted users, such as family members or authorized administrative personnel, can access the details.\\n\\nUpon receiving a request, the `detailRest` handler calls the `detail` function from the 'families' module. The function uses the provided family ID to fetch all relevant data from the database including membership information and other relevant attributes of the family entity. It processes this data to construct a detailed view of the family, considering user permissions and authentication status to manage data visibility. The result is a structured JSON object representing the detailed family profile, which is then returned to the client as the response payload.\",\"AIGenerated\":true}"
}