{
  "systemMessage": "Respond as if you were an expert in REST APIs for JavaScript using the Moleculer framework.Return a valid JSON object with only 'summary' and 'description' properties that can be used to document, using OpenAPI specifications, what the handler of the 'createRest' property does in the '/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-learning-paths/backend/services/rest/modules.rest.js' file, which is an action in the Moleculer JavaScript framework.\nI want 'summary' only have a short resume of what the controller does. Don't start it with \"This handler\" or \"This Endpoint\", only the summary.\nI want the description to be in markdown format and contain the following information (each point should be clearly separated into a different paragraph):\n* Short detailed description of what the handler does. It should always start with \"This endpoint\" and should not contain information about the parameters it receives and the response it returns, only what is expected to be done.\n* Authentication: Information about whether the user needs to be logged in to use the endpoint. It should start with '**Authentication:**\"\n* Permissions: Information about the permissions required for the user to use the endpoint. It should start with \"**Permissions:**\"\n* Fully detailed description of what the controller handler, and the methods the controller flow from request to response, does.\nYou can use this response as example: '{\"summary\":\"Retrieve assets owned by the current user\",\"description\":\"This endpoint retrieves all digital assets that are owned by the currently authenticated user. The collection of assets returned includes those that the user has created or have been shared with them within the platform.\\n\\n**Authentication:** The users must be authenticated to access their digital assets. An invalid or missing authentication token will result in endpoint access denial.\\n\\n**Permissions:** No specific permissions are called out for this endpoint; however, it's implied that users can only access assets that they have rights to view based on the asset's ownership and sharing properties.\\n\\nThe endpoint starts by invoking the `getByUser` method from the `Pins` core, passing in the `ctx` (context) parameter which includes user authentication information. This method leverages a database call to find all pins associated with the user's agent ID. These pins represent the user's digital assets within the platform. The result is a promise that, when resolved, returns the list of assets that the authenticated user owns or has access to. The HTTP response contains these assets in a JSON array format.\"}'\n",
  "userMessage": "/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-learning-paths/backend/services/rest/modules.rest.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-learning-paths/backend/core/modules/index.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-learning-paths/backend/core/modules/createModule.js\n[object Object]\n/Users/usuario/Sites/leemonade/leemons/plugins/leemons-plugin-learning-paths/backend/core/modules/createAssetsAssignables.js\n[object Object]",
  "response": "{\"summary\":\"Create a new learning module\",\"description\":\"This endpoint facilitates the creation of a new learning module within the leemons platform. The implementation includes constructing module details such as title, description, and associated learning assets based on input data.\\n\\n**Authentication:** A user must be authenticated to perform this action. Authentication ensures that requests to this endpoint are made by valid users of the platform.\\n\\n**Permissions:** The user needs to have the 'create_module' permission to be able to execute this action. This ensures only authorized users can add new learning modules.\\n\\nOnce the endpoint receives a request, it calls the `createModule` function from the `modules` core service. This function takes user-provided data such as module names, descriptions, and learning objective identifiers to assemble a new module instance. The process involves validating input data, ensuring correctness and completeness before creating the module in the database. Upon successful creation, the service returns details of the newly created module along with a status code indicating successful creation.\",\"AIGenerated\":true}"
}